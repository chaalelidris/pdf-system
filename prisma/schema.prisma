generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      String // "admin" or "user"
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  sessions  Session[]
}

model Pdf {
  id         String   @id @default(uuid())
  title      String
  filename   String   @unique
  fileNumber String?
  category   String
  type       String   @default("امر")
  origin     String   @default("مركزي")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// NextAuth.js Models
model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @map("refresh_token")
  access_token      String? @map("access_token")
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
